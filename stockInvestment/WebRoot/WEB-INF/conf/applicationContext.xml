<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
		xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:cache="http://www.springframework.org/schema/cache"
		xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
	    http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
	    http://www.springframework.org/schema/context 
	    http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	    http://www.springframework.org/schema/cache 
	    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
	    http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring    
    	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
	    http://www.springframework.org/schema/task 
	    http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	     
	     default-lazy-init="false">
	     
	<!-- servlet扫描 -->
	<mvc:default-servlet-handler/> 
	<!-- 注解扫描 -->  
	  <mvc:annotation-driven>
		        <mvc:message-converters register-defaults="false">
		            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		                <property name="supportedMediaTypes">
		                    <list>
		                        <value>text/html;charset=UTF-8</value>
		                        <value>application/json;charset=UTF-8</value>
		                    </list>
		                </property>
		            </bean>
		        </mvc:message-converters>
		    </mvc:annotation-driven>
	
	<context:component-scan base-package="com.stock"/>

    <context:property-placeholder location="classpath*:jdbc.properties, classpath*:redis.properties" />
    
    <!-- 开启定时任务 -->
    <task:annotation-driven/>
		<cache:annotation-driven />
	    <aop:aspectj-autoproxy />
	 
	    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
     		   p:shared="false" />  
     	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
			  p:cacheManager-ref="cacheManagerFactory"/>    	    	
  		
	
	<!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 显式指定Mapper文件位置 -->
		<!--<property name="mapperLocations" value="classpath*:system_yt/mybatis-conf/*.xml" /> -->
		<!-- mybatis配置文件路径 -->
        <property name="configLocation" value="WEB-INF/conf/myBatisConfig.xml"/>    
    </bean> 
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg index="0" ref="sqlSessionFactory" />
       <!-- 这个执行器会更新语句, 还有SIMPLE 和 REUSE -->
       <constructor-arg index="1" value="SIMPLE"/>  
    </bean>
    
  <bean id="sqlSessionTemplateBatch" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg index="0" ref="sqlSessionFactory" />
       <!-- 这个执行器会批量执行更新语句, 还有SIMPLE 和 REUSE -->
       <constructor-arg index="1" value="BATCH" />
   </bean>
       
 	 <!-- 扫描basePackage接口 -->
   <bean id="mybatisSimpleMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="annotationClass" value="org.springframework.stereotype.Repository" />
    	<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
    	<!-- 映射器接口文件的包路径， -->
       <property name="basePackage" value="com.stock.dao.simple" />
   </bean>
   
 	 <!-- 扫描basePackage接口 -->
   <bean id="mybatisBatchMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="annotationClass" value="org.springframework.stereotype.Repository" />
    	<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateBatch" />
    	<!-- 映射器接口文件的包路径， -->
       <property name="basePackage" value="com.stock.dao.batch" />
   </bean>   
   
	<!-- 使用annotation定义事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- Connection Info -->
       	<property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- Connection Pooling Info -->
  		<property name="initialSize" value="5" />
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="maxWait" value="5000" />
		<property name="testOnBorrow" value="true"/> 
		<property name="testWhileIdle" value="true"/> 
		<property name="validationQuery" value="select 1 from dual"/> 
    </bean>

	<!-- 控制上传文件 -->
	    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	        <!-- one of the properties available; the maximum file size in bytes -->
	        <property name="maxUploadSize" value="10240000000"/>
	        <property name="maxInMemorySize" value="1024000000"/>
	    </bean>
</beans>
